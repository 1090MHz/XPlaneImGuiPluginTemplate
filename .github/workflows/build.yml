name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  # Setup dependencies once on Linux
  setup-dependencies:
    runs-on: ubuntu-latest
    steps:
    - name: Setup dependencies with Docker
      run: |
        docker run --rm \
          -e EXPORT_BASE_DIR=/mnt/export \
          -v $PWD/third_party:/mnt/export \
          1090mhz/preflightchecklibs:latest

    - name: Verify dependencies were created
      run: |
        echo "=== Checking third_party structure ==="
        find third_party -type f -name "*.h" | head -10
        echo "=== X-Plane SDK check ==="
        ls -la third_party/libs/XPSDK410/CHeaders/XPLM/ || echo "X-Plane SDK not found"
        echo "=== Font check ==="
        ls -la third_party/fonts/ || echo "Fonts not found"
        echo "=== Total files created ==="
        find third_party -type f | wc -l

    - name: Upload dependencies
      uses: actions/upload-artifact@v4
      with:
        name: third_party
        path: third_party/
        retention-days: 1

  # Build on all platforms
  build:
    needs: setup-dependencies
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            arch: win_x64
          - os: ubuntu-latest
            arch: lin_x64
          - os: macos-latest
            arch: mac_x64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Download dependencies
      uses: actions/download-artifact@v4
      with:
        name: third_party
        path: third_party/

    - name: Verify downloaded dependencies
      shell: bash
      run: |
        echo "=== Downloaded third_party structure ==="
        find third_party -type f -name "*.h" | head -10
        echo "=== X-Plane SDK check ==="
        ls -la third_party/libs/XPSDK410/CHeaders/XPLM/ || echo "X-Plane SDK not found"
        echo "=== OpenGL headers check ==="
        find third_party -name "gl.h" -o -name "GL.h" | head -5
        echo "=== Total files available ==="
        find third_party -type f | wc -l

    - name: Install OpenGL dev libraries (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgl1-mesa-dev

    - name: Verify OpenGL headers (Linux)
      if: runner.os == 'Linux'
      run: |
        echo "=== System OpenGL headers check ==="
        find /usr/include -name "gl.h" -o -name "GL.h" 2>/dev/null | head -5
        echo "=== Mesa GL headers ==="
        ls -la /usr/include/GL/ 2>/dev/null || echo "No /usr/include/GL/ directory"
        echo "=== pkg-config check ==="
        pkg-config --cflags gl 2>/dev/null || echo "pkg-config gl not found"

    - name: Setup CMake
      uses: jwlawson/actions-setup-cmake@v1.14
      with:
        cmake-version: '3.15'

    - name: Configure CMake
      run: |
        mkdir build
        cd build
        if [ "${{ runner.os }}" = "Windows" ]; then
          cmake .. -G "Visual Studio 17 2022" -DCMAKE_BUILD_TYPE=Release
        else
          echo "=== CMake OpenGL discovery ==="
          cmake .. -DCMAKE_BUILD_TYPE=Release --debug-output | grep -i opengl || true
        fi
      shell: bash

    - name: Build
      run: |
        cd build
        cmake --build . --config Release

    - name: Test install (create staging directory)
      run: |
        cd build
        cmake --install . --prefix "./staging"

    - name: Verify build artifacts
      shell: bash
      run: |
        cd build/staging
        if [ "${{ runner.os }}" = "Windows" ]; then
          ls -la win_x64/
          test -f "win_x64/XPlaneImGuiPlugin.xpl"
        elif [ "${{ runner.os }}" = "Linux" ]; then
          ls -la lin_x64/
          test -f "lin_x64/XPlaneImGuiPlugin.xpl"
        elif [ "${{ runner.os }}" = "macOS" ]; then
          ls -la mac_x64/
          test -f "mac_x64/XPlaneImGuiPlugin.xpl"
        fi

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: plugin-${{ matrix.arch }}
        path: build/staging/
        retention-days: 7
